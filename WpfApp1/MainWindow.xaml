<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="接口测试工具" Height="900" Width="1600">
    <Window.Resources>
        <!-- 现代配色方案 -->
        <SolidColorBrush x:Key="PrimaryColor" Color="#3F51B5"/>
        <SolidColorBrush x:Key="PrimaryLightColor" Color="#7986CB"/>
        <SolidColorBrush x:Key="PrimaryDarkColor" Color="#303F9F"/>
        <SolidColorBrush x:Key="AccentColor" Color="#FF4081"/>
        <SolidColorBrush x:Key="TextPrimaryColor" Color="#212121"/>
        <SolidColorBrush x:Key="TextSecondaryColor" Color="#757575"/>
        <SolidColorBrush x:Key="BorderColor" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#FAFAFA"/>
        <SolidColorBrush x:Key="CardBackgroundColor" Color="#FFFFFF"/>
        
        <!-- 阴影效果 -->
        <DropShadowEffect x:Key="LightShadow" BlurRadius="10" ShadowDepth="1" Direction="270" Color="#22000000" Opacity="0.3"/>
        <DropShadowEffect x:Key="MediumShadow" BlurRadius="15" ShadowDepth="2" Direction="270" Color="#33000000" Opacity="0.4"/>
        
        <!-- 按钮样式 -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Effect="{StaticResource LightShadow}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- 次要按钮样式 -->
        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="15,5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#10000000"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 文本框样式 -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                        VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 占位符文本框样式 -->
        <Style x:Key="PlaceholderTextBox" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <Grid>
                                <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, 
                                         UpdateSourceTrigger=PropertyChanged}"
                                         x:Name="textSource" 
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Padding="{TemplateBinding Padding}"
                                         FontSize="{TemplateBinding FontSize}"
                                         Panel.ZIndex="2" />
                                <TextBox Text="{TemplateBinding Tag}" 
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Padding="{TemplateBinding Padding}"
                                         FontSize="{TemplateBinding FontSize}"
                                         Panel.ZIndex="1">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" 
                                                            Value="">
                                                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox样式 -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Focusable="False">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="border" 
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="4">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Grid.Column="0"
                                                                Margin="8,0,0,0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Center"/>
                                                <Path x:Name="arrow" Grid.Column="1"
                                                      Data="M0,0 L8,0 L4,4 Z"
                                                      Fill="{StaticResource TextSecondaryColor}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,8,0"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"/>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide"
                                   Focusable="False">
                                <Border x:Name="dropDownBorder"
                                        Background="{StaticResource CardBackgroundColor}"
                                        BorderBrush="{StaticResource BorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        Effect="{StaticResource LightShadow}"
                                        MinWidth="{Binding ActualWidth, ElementName=ToggleButton}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Margin="0,4,0,0">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ComboBoxItem样式 -->
        <Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="12,4"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E8EAF6"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#C5CAE9"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid样式 -->
        <Style x:Key="ModernDataGrid" TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="AlternatingRowBackground" Value="#F8F9FA"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="RowHeight" Value="32"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ColumnHeaderHeight" Value="40"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="CanUserAddRows" Value="True"/>
            <Setter Property="CanUserDeleteRows" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#E8EAF6"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F5F5F5"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="8,4"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Background="{TemplateBinding Background}" 
                                            BorderThickness="0">
                                        <ContentPresenter VerticalAlignment="Center" 
                                                         TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=Foreground}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsEditing" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#F5F5F5"/>
                        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="Padding" Value="8,0"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid Margin="0,-2,0,-2"
                              ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}">
                            <Ellipse StrokeThickness="0" Fill="#FFDC000C" Width="8" Height="8" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" 
                                                    Focusable="false" 
                                                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" 
                                                                           Grid.Column="1" 
                                                                           Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                   CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                                   Grid.ColumnSpan="2" 
                                                                   Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                                      Grid.Column="2" 
                                                      Maximum="{TemplateBinding ScrollableHeight}" 
                                                      Orientation="Vertical" 
                                                      Grid.Row="1" 
                                                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                      ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                                          Grid.Column="1" 
                                                          Maximum="{TemplateBinding ScrollableWidth}" 
                                                          Orientation="Horizontal" 
                                                          Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                          Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 自定义TextBox样式用于DataGrid编辑 -->
        <Style x:Key="DataGridEditingTextBox" TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- TabControl样式 -->
        <Style x:Key="ModernTabControl" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="TabStripPlacement" Value="Top"/>
        </Style>

        <!-- TabItem样式 -->
        <Style x:Key="ModernTabItem" TargetType="TabItem">
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}">
                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="{TemplateBinding Padding}"/>
                                <Border x:Name="SelectedBorder" 
                                        Height="2" 
                                        Background="{StaticResource PrimaryColor}" 
                                        VerticalAlignment="Bottom" 
                                        Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter TargetName="SelectedBorder" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontSize="13"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 修改 UrlTextBox 样式 -->
        <Style x:Key="UrlTextBox" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Effect="{StaticResource LightShadow}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0"
                                         VerticalAlignment="Center" 
                                         Margin="12,0,0,0"
                                         FontSize="13"
                                         Foreground="{StaticResource TextSecondaryColor}"/>
                                <TextBox Grid.Column="1"
                                        Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Padding="2,8,8,8"
                                        FontSize="{TemplateBinding FontSize}"
                                        VerticalContentAlignment="Center"
                                        AcceptsReturn="False"
                                        TextWrapping="NoWrap"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListView和GridView样式 -->
        <Style x:Key="ModernGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="8,8"/>
            <Setter Property="Background" Value="#F5F5F5"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>

        <Style x:Key="ModernListViewItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F5F5F5"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#E8EAF6"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 滚动条样式 -->
        <Style x:Key="ModernScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="#CDCDCD"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4" 
                                Margin="1,0,1,0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource PrimaryLightColor}" TargetName="rectangle"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" Value="{StaticResource PrimaryColor}" TargetName="rectangle"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" ViewportSize="{TemplateBinding ViewportSize}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" Opacity="0" Focusable="False"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" Opacity="0" Focusable="False"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ModernScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                   CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                   CanHorizontallyScroll="False" 
                                                   CanVerticallyScroll="False" 
                                                   ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                   Content="{TemplateBinding Content}" 
                                                   Grid.Column="0" 
                                                   Margin="{TemplateBinding Padding}" 
                                                   Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                      AutomationProperties.AutomationId="VerticalScrollBar" 
                                      Cursor="Arrow" 
                                      Grid.Column="1" 
                                      Maximum="{TemplateBinding ScrollableHeight}" 
                                      Minimum="0" 
                                      Grid.Row="0" 
                                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ViewportSize="{TemplateBinding ViewportHeight}" 
                                      Style="{StaticResource ModernScrollBar}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                      AutomationProperties.AutomationId="HorizontalScrollBar" 
                                      Cursor="Arrow" 
                                      Grid.Column="0" 
                                      Maximum="{TemplateBinding ScrollableWidth}" 
                                      Minimum="0" 
                                      Orientation="Horizontal" 
                                      Grid.Row="1" 
                                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                      Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ViewportSize="{TemplateBinding ViewportWidth}" 
                                      Style="{StaticResource ModernScrollBar}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.Background>
        <SolidColorBrush Color="#FAFAFA"/>
    </Window.Background>

    <Grid Margin="16">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- 左侧接口列表 -->
        <Border Background="{StaticResource CardBackgroundColor}" 
                CornerRadius="8" 
                Effect="{StaticResource MediumShadow}"
                Margin="0,0,16,0">
            <DockPanel Margin="16">
                <StackPanel DockPanel.Dock="Top" Margin="0,0,0,16">
                    <Button x:Name="btnNewRequest" Content="新建请求" Height="36" 
                            Style="{StaticResource PrimaryButton}" Margin="0,0,0,16"/>
                    <TextBox x:Name="txtSearch" Height="36" 
                         Style="{StaticResource PlaceholderTextBox}"
                             Tag="搜索..." Margin="0,0,0,8"/>
            </StackPanel>
            <TabControl Style="{StaticResource ModernTabControl}"> 
                    <TabItem Header="接口" Style="{StaticResource ModernTabItem}">
                        <TreeView x:Name="treeRequests" Background="Transparent" 
                                  BorderThickness="0"/>
                </TabItem>
                <TabItem Header="历史记录" Style="{StaticResource ModernTabItem}">
                    <ListView x:Name="listHistory" Background="Transparent"
                              BorderThickness="0"
                              ItemContainerStyle="{StaticResource ModernListViewItem}">
                        <ListView.View>
                            <GridView>
                                <GridView.ColumnHeaderContainerStyle>
                                    <Style TargetType="{x:Type GridViewColumnHeader}" 
                                           BasedOn="{StaticResource ModernGridViewColumnHeader}"/>
                                </GridView.ColumnHeaderContainerStyle>
                                <GridViewColumn Header="接口名称" Width="200">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="时间" Width="160">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding RequestTime, StringFormat=yyyy-MM-dd HH:mm:ss}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="请求方法" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Method}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="URL" Width="300">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Url}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="状态码" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding StatusCode}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
            </TabControl>
        </DockPanel>
        </Border>

        <!-- 右侧请求详情 -->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="100" x:Name="paramsRow"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*" MinHeight="100"/>
            </Grid.RowDefinitions>

            <!-- 请求头部 -->
            <Border Background="{StaticResource CardBackgroundColor}" 
                    CornerRadius="8" 
                    Effect="{StaticResource MediumShadow}"
                    Margin="0,0,0,16"
                    Padding="16">
                <DockPanel>
                    <ComboBox x:Name="cboMethod" Width="100" Margin="0,0,16,0" 
                         Style="{StaticResource ModernComboBox}" SelectedIndex="0">
                        <ComboBoxItem Content="GET" Style="{StaticResource ModernComboBoxItem}"/>
                        <ComboBoxItem Content="POST" Style="{StaticResource ModernComboBoxItem}"/>
                        <ComboBoxItem Content="PUT" Style="{StaticResource ModernComboBoxItem}"/>
                        <ComboBoxItem Content="DELETE" Style="{StaticResource ModernComboBoxItem}"/>
                </ComboBox>
                    <TextBox x:Name="txtUrl" Height="36" 
                         Style="{StaticResource UrlTextBox}"
                         Text="https://" 
                             Margin="0,0,16,0" Width="Auto"
                         VerticalContentAlignment="Center"/>
                    <Button x:Name="btnSend" Content="发送" Width="100" Height="36"
                        Style="{StaticResource PrimaryButton}"/>
            </DockPanel>
            </Border>

            <!-- 请求参数选项卡 -->
            <Border Grid.Row="1" 
                    Background="{StaticResource CardBackgroundColor}" 
                    CornerRadius="8" 
                    Effect="{StaticResource MediumShadow}"
                    Margin="0,0,0,8">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- 标题栏和折叠按钮 -->
                    <DockPanel Grid.Row="0" Background="#F5F5F5" Height="32">
                        <Button x:Name="btnCollapseParams" DockPanel.Dock="Right" Width="32" Height="32"
                                Style="{StaticResource SecondaryButton}" BorderThickness="0" Margin="0,0,4,0"
                                Click="BtnCollapseParams_Click">
                            <Path x:Name="arrowParams" Data="M0,0 L8,8 L16,0" Stroke="{StaticResource TextSecondaryColor}" 
                                  StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <TextBlock Text="请求参数" Margin="10,0,0,0" VerticalAlignment="Center" 
                                   FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryColor}"/>
                    </DockPanel>
                    
                    <!-- 参数内容 -->
                    <TabControl Grid.Row="1" x:Name="tabParams" Style="{StaticResource ModernTabControl}" 
                                Margin="8">
                        <TabItem Header="Params" Style="{StaticResource ModernTabItem}">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource ModernScrollViewer}">
                                <StackPanel>
                                    <!-- Query 参数 -->
                                    <DataGrid x:Name="gridQueryParams" Style="{StaticResource ModernDataGrid}"
                                             AutoGenerateColumns="False" CanUserAddRows="True" Height="200"
                                             ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <DataGrid.Columns>
                                            <DataGridCheckBoxColumn Header="启用" Width="50" Binding="{Binding IsEnabled}"/>
                                            <DataGridTextColumn Header="参数名" Width="*" Binding="{Binding Key}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="参数值" Width="*" Binding="{Binding Value}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTemplateColumn Header="类型" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Type}" VerticalAlignment="Center"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <ComboBox Text="{Binding Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                  Style="{StaticResource ModernComboBox}"
                                                                  ItemContainerStyle="{StaticResource ModernComboBoxItem}"
                                                                  Height="28" Padding="4,0"
                                                                  BorderThickness="0,0,0,1"
                                                                  BorderBrush="{StaticResource PrimaryColor}"
                                                                  Background="Transparent">
                                                            <System:String>string</System:String>
                                                            <System:String>integer</System:String>
                                                            <System:String>boolean</System:String>
                                                            <System:String>number</System:String>
                                                            <System:String>array</System:String>
                                                            <System:String>file</System:String>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Header="说明" Width="*" Binding="{Binding Description}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    
                                    <!-- 添加参数按钮 -->
                                    <Button x:Name="btnAddQueryParam" Content="添加参数" 
                                            Style="{StaticResource SecondaryButton}"
                                            HorizontalAlignment="Left" Margin="0,8,0,16" 
                                            Width="100" Height="32"/>
                                    
                                    <!-- Path 参数 -->
                                    <TextBlock Text="Path 参数" FontWeight="SemiBold" Margin="0,0,0,8"/>
                                    <DataGrid x:Name="gridPathParams" Style="{StaticResource ModernDataGrid}"
                                             AutoGenerateColumns="False" CanUserAddRows="True" Height="200"
                                             ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="参数名" Width="*" Binding="{Binding Key}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="参数值" Width="*" Binding="{Binding Value}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTemplateColumn Header="类型" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Type}" VerticalAlignment="Center"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <ComboBox Text="{Binding Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                  Style="{StaticResource ModernComboBox}"
                                                                  ItemContainerStyle="{StaticResource ModernComboBoxItem}"
                                                                  Height="28" Padding="4,0"
                                                                  BorderThickness="0,0,0,1"
                                                                  BorderBrush="{StaticResource PrimaryColor}"
                                                                  Background="Transparent">
                                                            <System:String>string</System:String>
                                                            <System:String>integer</System:String>
                                                            <System:String>boolean</System:String>
                                                            <System:String>number</System:String>
                                                            <System:String>array</System:String>
                                                            <System:String>file</System:String>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Header="说明" Width="*" Binding="{Binding Description}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    
                                    <!-- 添加参数按钮 -->
                                    <Button x:Name="btnAddPathParam" Content="添加参数" 
                                            Style="{StaticResource SecondaryButton}"
                                            HorizontalAlignment="Left" Margin="0,8,0,0" 
                                            Width="100" Height="32"/>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Headers" Style="{StaticResource ModernTabItem}">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource ModernScrollViewer}">
                                <StackPanel>
                                    <DataGrid x:Name="gridHeaders" Style="{StaticResource ModernDataGrid}"
                                             AutoGenerateColumns="False" CanUserAddRows="True" Height="300"
                                             ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <DataGrid.Columns>
                                            <DataGridCheckBoxColumn Header="启用" Width="50" Binding="{Binding IsEnabled}"/>
                                            <DataGridTextColumn Header="参数名" Width="*" Binding="{Binding Key}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="参数值" Width="*" Binding="{Binding Value}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="说明" Width="*" Binding="{Binding Description}">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="8,4"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource DataGridEditingTextBox}"/>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    
                                    <!-- 添加Header按钮 -->
                                    <Button x:Name="btnAddHeader" Content="添加Header" 
                                            Style="{StaticResource SecondaryButton}"
                                            HorizontalAlignment="Left" Margin="0,8,0,0" 
                                            Width="120" Height="32"/>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Body" Style="{StaticResource ModernTabItem}">
                            <DockPanel>
                                <ComboBox x:Name="cboContentType" DockPanel.Dock="Top" 
                                          Style="{StaticResource ModernComboBox}"
                                          SelectedIndex="0"
                                              Margin="0,0,0,16" Width="250"
                                          HorizontalAlignment="Left">
                                        <ComboBoxItem Content="application/json" Style="{StaticResource ModernComboBoxItem}"/>
                                        <ComboBoxItem Content="application/x-www-form-urlencoded" Style="{StaticResource ModernComboBoxItem}"/>
                                        <ComboBoxItem Content="text/plain" Style="{StaticResource ModernComboBoxItem}"/>
                                        <ComboBoxItem Content="multipart/form-data" Style="{StaticResource ModernComboBoxItem}"/>
                                </ComboBox>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource ModernScrollViewer}">
                                    <TextBox x:Name="txtBody" Style="{StaticResource ModernTextBox}"
                                             AcceptsReturn="True" TextWrapping="Wrap"
                                             MinHeight="150" VerticalScrollBarVisibility="Disabled"/>
                                </ScrollViewer>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Border>
            
            <!-- 分隔条 -->
            <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch" 
                          Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                          ResizeDirection="Rows" ResizeBehavior="PreviousAndNext">
                <GridSplitter.Template>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Border Background="Transparent" Padding="0,2">
                            <Border Height="1" Background="#E0E0E0" VerticalAlignment="Center">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Opacity" Value="0.6"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=GridSplitter}}" Value="True">
                                                <Setter Property="Background" Value="{StaticResource PrimaryLightColor}"/>
                                                <Setter Property="Opacity" Value="1"/>
                                                <Setter Property="Height" Value="3"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </GridSplitter.Template>
                <GridSplitter.Style>
                    <Style TargetType="GridSplitter">
                        <Setter Property="Cursor" Value="SizeNS"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>

            <!-- 响应结果 -->
            <Border Grid.Row="3" 
                    Background="{StaticResource CardBackgroundColor}" 
                    CornerRadius="8" 
                    Effect="{StaticResource MediumShadow}"
                    Margin="0,8,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- 标题栏和折叠按钮 -->
                    <DockPanel Grid.Row="0" Background="#F5F5F5" Height="32">
                        <Button x:Name="btnCollapseResponse" DockPanel.Dock="Right" Width="32" Height="32"
                                Style="{StaticResource SecondaryButton}" BorderThickness="0" Margin="0,0,4,0"
                                Click="BtnCollapseResponse_Click">
                            <Path x:Name="arrowResponse" Data="M0,8 L8,0 L16,8" Stroke="{StaticResource TextSecondaryColor}" 
                                  StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <TextBlock Text="响应结果" Margin="10,0,0,0" VerticalAlignment="Center" 
                                   FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryColor}"/>
                    </DockPanel>
                    
                    <!-- 响应内容 -->
                    <TabControl Grid.Row="1" Style="{StaticResource ModernTabControl}"
                                Margin="8" x:Name="tabResponse">
                        <TabItem Header="Response" Style="{StaticResource ModernTabItem}">
                            <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <!-- 响应工具栏 -->
                                    <StackPanel Orientation="Horizontal" Margin="0,10,0,8">
                                        <Button x:Name="btnCopyResponse" Content="复制" 
                                                Style="{StaticResource SecondaryButton}"
                                                Width="80" Height="32" Margin="0,0,8,0"/>
                                        <Button x:Name="btnFormatJson" Content="格式化" 
                                                Style="{StaticResource SecondaryButton}"
                                                Width="80" Height="32" Margin="10,0,8,0"/>
                                    </StackPanel>
                                    
                                    <!-- 响应内容 -->
                                <TextBox x:Name="txtResponse" 
                                         Grid.Row="1"
                                     Style="{StaticResource ModernTextBox}"
                                     IsReadOnly="True" 
                                     AcceptsReturn="True" 
                                     TextWrapping="NoWrap"
                                     VerticalScrollBarVisibility="Auto" 
                                     HorizontalScrollBarVisibility="Auto"
                                         FontFamily="Consolas, Courier New, monospace" 
                                     FontSize="13"
                                         Background="#FAFAFA"
                                         Padding="16">
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <Trigger Property="IsReadOnly" Value="True">
                                                    <Setter Property="Background" Value="#FAFAFA"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                                    
                                    <!-- 响应状态栏 -->
                                    <Border Grid.Row="2" 
                                            Background="#F5F5F5" 
                                            BorderBrush="{StaticResource BorderColor}"
                                            BorderThickness="0,1,0,0"
                                            Padding="8,4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="txtStatusCode" 
                                                       Text="状态码: 200 OK" 
                                                       Foreground="{StaticResource TextSecondaryColor}"
                                                       VerticalAlignment="Center"/>
                                            <TextBlock Grid.Column="1" 
                                                       x:Name="txtContentType" 
                                                       Text="Content-Type: application/json" 
                                                       Foreground="{StaticResource TextSecondaryColor}"
                                                       Margin="16,0,0,0"
                                                       VerticalAlignment="Center"/>
                                            <TextBlock Grid.Column="2" 
                                                       x:Name="txtResponseTime" 
                                                       Text="响应时间: 123ms" 
                                                       Foreground="{StaticResource TextSecondaryColor}"
                                                       VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>

